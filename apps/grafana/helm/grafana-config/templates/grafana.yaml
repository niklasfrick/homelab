apiVersion: grafana.integreatly.org/v1beta1
kind: Grafana
metadata:
  name: grafana
  labels:
    # This label will be used to select the Grafana datasource, dashboards, etc.
    grafanaInstance: main
spec:
  config:
    log:
      mode: console
      level: warn
    auth:
      disable_login_form: "false"
      oauth_auto_login: "false"
    security:
      admin_user: admin
    users:
      auto_assign_org_role: Admin
    server:
      root_url: https://{{ .Values.grafana.ingress.host }}
    database:
      wal: "true"
    plugins:
      enable_alpha: "true"
      plugin_admin_enabled: "true"
    analytics:
      enabled: "false"
      check_for_updates: "false"
      reporting_enabled: "false"
  deployment:
    spec:
      replicas: 1
      strategy:
        type: Recreate
      template:
        spec:
          containers:
            - name: grafana
              image: docker.io/grafana/grafana:{{ .Values.grafana.version }}
              envFrom:
                - secretRef:
                    name: custom-grafana-secrets
              {{ with .Values.grafana.resources }}
              resources: 
                {{- toYaml . | nindent 16 }}
              {{- end }}
              volumeMounts:
                - mountPath: /var/lib/grafana
                  name: grafana-data
          volumes:
            - name: grafana-data
              persistentVolumeClaim:
                claimName: grafana-pvc
          securityContext:
            # Set fsGroup because of a bug (https://github.com/grafana-operator/grafana-operator/issues/300#issue-739175853)
            fsGroup: 472
  ingress:
    metadata:
      annotations:
        {{- if .Values.grafana.ingress.tls.clusterIssuer }}
        cert-manager.io/cluster-issuer: {{ .Values.grafana.ingress.tls.clusterIssuer }}
        {{- end }}
    spec:
      ingressClassName: internal-ingress-nginx
      rules:
        - host: {{ .Values.grafana.ingress.host }}
          http:
            paths:
              - backend:
                  service:
                    name: grafana-service
                    port:
                      name: grafana
                path: /
                pathType: ImplementationSpecific
      tls:
        - hosts:
            - {{ .Values.grafana.ingress.host }}
          secretName: {{ .Values.grafana.ingress.host }}
  persistentVolumeClaim:
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: {{ .Values.grafana.storage.size }}
      storageClassName: local-path
